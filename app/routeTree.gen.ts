/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SubsequentQueriesImport } from './routes/subsequent-queries'
import { Route as SimpleSiblingQueriesImport } from './routes/simple-sibling-queries'
import { Route as QueryCachingPrefetchingImport } from './routes/query-caching-prefetching'
import { Route as LiveQueriesSsrImport } from './routes/live-queries-ssr'
import { Route as ConsistentViewsImport } from './routes/consistent-views'
import { Route as BlockingAndStreamingImport } from './routes/blocking-and-streaming'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SubsequentQueriesRoute = SubsequentQueriesImport.update({
  id: '/subsequent-queries',
  path: '/subsequent-queries',
  getParentRoute: () => rootRoute,
} as any)

const SimpleSiblingQueriesRoute = SimpleSiblingQueriesImport.update({
  id: '/simple-sibling-queries',
  path: '/simple-sibling-queries',
  getParentRoute: () => rootRoute,
} as any)

const QueryCachingPrefetchingRoute = QueryCachingPrefetchingImport.update({
  id: '/query-caching-prefetching',
  path: '/query-caching-prefetching',
  getParentRoute: () => rootRoute,
} as any)

const LiveQueriesSsrRoute = LiveQueriesSsrImport.update({
  id: '/live-queries-ssr',
  path: '/live-queries-ssr',
  getParentRoute: () => rootRoute,
} as any)

const ConsistentViewsRoute = ConsistentViewsImport.update({
  id: '/consistent-views',
  path: '/consistent-views',
  getParentRoute: () => rootRoute,
} as any)

const BlockingAndStreamingRoute = BlockingAndStreamingImport.update({
  id: '/blocking-and-streaming',
  path: '/blocking-and-streaming',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/blocking-and-streaming': {
      id: '/blocking-and-streaming'
      path: '/blocking-and-streaming'
      fullPath: '/blocking-and-streaming'
      preLoaderRoute: typeof BlockingAndStreamingImport
      parentRoute: typeof rootRoute
    }
    '/consistent-views': {
      id: '/consistent-views'
      path: '/consistent-views'
      fullPath: '/consistent-views'
      preLoaderRoute: typeof ConsistentViewsImport
      parentRoute: typeof rootRoute
    }
    '/live-queries-ssr': {
      id: '/live-queries-ssr'
      path: '/live-queries-ssr'
      fullPath: '/live-queries-ssr'
      preLoaderRoute: typeof LiveQueriesSsrImport
      parentRoute: typeof rootRoute
    }
    '/query-caching-prefetching': {
      id: '/query-caching-prefetching'
      path: '/query-caching-prefetching'
      fullPath: '/query-caching-prefetching'
      preLoaderRoute: typeof QueryCachingPrefetchingImport
      parentRoute: typeof rootRoute
    }
    '/simple-sibling-queries': {
      id: '/simple-sibling-queries'
      path: '/simple-sibling-queries'
      fullPath: '/simple-sibling-queries'
      preLoaderRoute: typeof SimpleSiblingQueriesImport
      parentRoute: typeof rootRoute
    }
    '/subsequent-queries': {
      id: '/subsequent-queries'
      path: '/subsequent-queries'
      fullPath: '/subsequent-queries'
      preLoaderRoute: typeof SubsequentQueriesImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blocking-and-streaming': typeof BlockingAndStreamingRoute
  '/consistent-views': typeof ConsistentViewsRoute
  '/live-queries-ssr': typeof LiveQueriesSsrRoute
  '/query-caching-prefetching': typeof QueryCachingPrefetchingRoute
  '/simple-sibling-queries': typeof SimpleSiblingQueriesRoute
  '/subsequent-queries': typeof SubsequentQueriesRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blocking-and-streaming': typeof BlockingAndStreamingRoute
  '/consistent-views': typeof ConsistentViewsRoute
  '/live-queries-ssr': typeof LiveQueriesSsrRoute
  '/query-caching-prefetching': typeof QueryCachingPrefetchingRoute
  '/simple-sibling-queries': typeof SimpleSiblingQueriesRoute
  '/subsequent-queries': typeof SubsequentQueriesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/blocking-and-streaming': typeof BlockingAndStreamingRoute
  '/consistent-views': typeof ConsistentViewsRoute
  '/live-queries-ssr': typeof LiveQueriesSsrRoute
  '/query-caching-prefetching': typeof QueryCachingPrefetchingRoute
  '/simple-sibling-queries': typeof SimpleSiblingQueriesRoute
  '/subsequent-queries': typeof SubsequentQueriesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blocking-and-streaming'
    | '/consistent-views'
    | '/live-queries-ssr'
    | '/query-caching-prefetching'
    | '/simple-sibling-queries'
    | '/subsequent-queries'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blocking-and-streaming'
    | '/consistent-views'
    | '/live-queries-ssr'
    | '/query-caching-prefetching'
    | '/simple-sibling-queries'
    | '/subsequent-queries'
  id:
    | '__root__'
    | '/'
    | '/blocking-and-streaming'
    | '/consistent-views'
    | '/live-queries-ssr'
    | '/query-caching-prefetching'
    | '/simple-sibling-queries'
    | '/subsequent-queries'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlockingAndStreamingRoute: typeof BlockingAndStreamingRoute
  ConsistentViewsRoute: typeof ConsistentViewsRoute
  LiveQueriesSsrRoute: typeof LiveQueriesSsrRoute
  QueryCachingPrefetchingRoute: typeof QueryCachingPrefetchingRoute
  SimpleSiblingQueriesRoute: typeof SimpleSiblingQueriesRoute
  SubsequentQueriesRoute: typeof SubsequentQueriesRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlockingAndStreamingRoute: BlockingAndStreamingRoute,
  ConsistentViewsRoute: ConsistentViewsRoute,
  LiveQueriesSsrRoute: LiveQueriesSsrRoute,
  QueryCachingPrefetchingRoute: QueryCachingPrefetchingRoute,
  SimpleSiblingQueriesRoute: SimpleSiblingQueriesRoute,
  SubsequentQueriesRoute: SubsequentQueriesRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blocking-and-streaming",
        "/consistent-views",
        "/live-queries-ssr",
        "/query-caching-prefetching",
        "/simple-sibling-queries",
        "/subsequent-queries"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/blocking-and-streaming": {
      "filePath": "blocking-and-streaming.tsx"
    },
    "/consistent-views": {
      "filePath": "consistent-views.tsx"
    },
    "/live-queries-ssr": {
      "filePath": "live-queries-ssr.tsx"
    },
    "/query-caching-prefetching": {
      "filePath": "query-caching-prefetching.tsx"
    },
    "/simple-sibling-queries": {
      "filePath": "simple-sibling-queries.tsx"
    },
    "/subsequent-queries": {
      "filePath": "subsequent-queries.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
